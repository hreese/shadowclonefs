package shadowclonefs

import (
	"io"
	"strings"
	"testing"
)

const randomData = `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
iDiVZm1uLg86No0PTra04w==`

func TestCalculateHashes(t *testing.T) {
	result, err := CalculateHashes(strings.NewReader(randomData))
	if err != nil {
		t.Error(err)
	}
	t.Log(result)
}

type ZeroReader struct{}
func (z ZeroReader) Read(p []byte) (n int, err error) {
	for i, _ := range p {
		p[i] = 0
	}
	return len(p), nil}

func BenchmarkCalculateHashes(b *testing.B) {
	for n := 0; n < b.N; n++ {
		_, _ = CalculateHashes(io.LimitReader(ZeroReader{}, 1024*1024))
	}
}